{% extends "base.html.twig" %}

{% block header %}
    <h1 class = "page-header">Manage Students Courses</h1>
{% endblock %}

{% block body %}

    <div class="container-fluid">

        <div class="row">
            <div class="col-md-6 back-button-col">
                <a href="{{ path('studentList') }}"><button type="button" class="btn btn-primary addBtn back-button">Go back to list of Students</button></a>
            </div>
            <div class="col-md-6 inline-buttons">
                <input id="coursesListToggle" type="checkbox" checked data-toggle="toggle" data-on="courses list" data-off="courses list" data-onstyle="success" data-offstyle="danger">
                <input id="coursesSearchedToggle" type="checkbox" checked data-toggle="toggle" data-on="searched courses" data-off="searched courses" data-onstyle="success" data-offstyle="danger" data-width="150">
                <input id="coursesStudentsToggle" type="checkbox" checked data-toggle="toggle" data-on="students courses" data-off="students courses" data-onstyle="success" data-offstyle="danger" data-width="140">
            </div>
        </div>

    <div class="row">

        <div id="coursesList" class="col-md-7">
            {{ render(controller('AppBundle:Course:availableCourseList', { 'studentId':studentId })) }}
        </div>

    <div id="coursesSearchedStudents" class="col-md-5 right fixed">

        <div>

            <input name="searchPhrase" class="form-control mr-sm-2" type="text" placeholder="Search..." id="searchInput">

            <div class = "panel panel-info courses table-responsive table-300" id="searchedCoursesTable">
                <div class = "panel-heading">
                    <h2>Searched Courses</h2>
                </div>
                <div class = "panel-body">
                    <table class="table table-condensed">
                        <thead>
                        <tr>
                            <th>No.</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th class="coursesSearchedToggleable">Form</th>
                            <th class="coursesSearchedToggleable">ECTS</th>
                            <th class="coursesSearchedToggleable">Level</th>
                            <th class="coursesSearchedToggleable">Type</th>
                            <th class="coursesSearchedToggleable">Syllabus</th>
                        </tr>
                        </thead>
                        <tbody class="overflow-y-scroll" id="searchedCourses">
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td class="coursesSearchedToggleable"></td>
                            <td class="coursesSearchedToggleable"></td>
                            <td class="coursesSearchedToggleable"></td>
                            <td class="coursesSearchedToggleable"></td>
                            <td class="coursesSearchedToggleable"></td>
                            <td></td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class = "panel panel-info courses table-responsive table-300"  id="studentsCoursesTable">
                <div class = "panel-heading">
                    <h2>{{ student.name }} {{ student.surname }} Courses</h2>
                </div>
                <div class = "panel-body">
                    <table class="table table-condensed">
                        <thead>
                        <tr>
                            <th>No.</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th class="coursesStudentsToggleable">Form</th>
                            <th class="coursesStudentsToggleable">ECTS</th>
                            <th class="coursesStudentsToggleable">Level</th>
                            <th class="coursesStudentsToggleable">Type</th>
                            <th class="coursesStudentsToggleable">Syllabus</th>
                            <th class="coursesStudentsToggleable">State</th>
                        </tr>
                        </thead>
                        <tbody class="overflow-y-scroll">
                        {% set ectsSum = 0 %}
                        {% for course in courses %}
                            <tr>
                                <td>{{ loop.index }}</td>
                                <td>{{ course.code }}</td>
                                <td>{{ course.name }}</td>
                                <td class="coursesStudentsToggleable">{{ course.form }}</td>
                                <td class="coursesStudentsToggleable">{{ course.eCTS }}</td>
                                <td class="coursesStudentsToggleable">{{ course.level }}</td>
                                <td class="coursesStudentsToggleable">{{ course.type }}</td>
                                {% if course.syllabus is not null %}
                                    <td class="coursesStudentsToggleable"><a href= "{{ asset('uploads/syllabuses/' ~ course.syllabus) }}">syllabus</a></td>
                                {% else %}
                                    <td class="coursesStudentsToggleable">-</td>
                                {% endif %}
                                <td class="coursesStudentsToggleable"><button type="button" class="btn btn-default courseStudentStateHistoryButton" id="{{ course.id }}courseStudentStateHistoryButton{{ studentId }}" data-toggle="modal" data-target="#courseStudent{{ course.id }}{{ studentId }}History">{{ studentCoursesStates[loop.index-1] }}</button></td>
                                {% if coursesTransitions is defined %}
                                    {% for toState in coursesTransitions[course.name] %}
                                        <td class="coursesStudentsToggleable"><a href="{{ path('changeCourseState', {'studentId': studentId, 'courseId': course.id, 'stateName': toState.toState.name}) }}"><button type="button" class="btn btn-info">{{ toState.buttonString }}</button></a></td>
                                    {% endfor %}
                                {% endif %}
                                <td><button type="button" class="btn btn-danger" data-toggle="modal" data-target="#course{{ course.code }}DeleteAlert">Delete</button></td>
                                <td><button type="button" class="btn btn-warning" data-toggle="modal" data-target="#course{{ course.code }}GradeAlert">Grade:
                                        {% if grades[loop.index-1] != null %}
                                            {{ grades[loop.index-1] }}
                                        {% else %}
                                            -
                                        {% endif %}</button></td>
                                <td><button type="button" class="btn btn-warning" data-toggle="modal" data-target="#course{{ course.code }}NoteAlert">Text Note</button></td>
                            </tr>

                            <div class="modal fade" id="courseStudent{{ course.id }}{{ studentId }}History" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="false">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">History of states of course: {{ course.name }} - {{ course.code }}</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body courseStudentStateHistory" id="courseStudent{{ course.id }}{{ studentId }}StateHistory">

                                        </div>
                                        <div class="modal-footer">

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="course{{ course.code }}DeleteAlert" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="false">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Course deletion from student</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to delete this course from this student?
                                        </div>
                                        <div class="modal-footer">
                                            <a href="{{ path('deleteStudentCourse', {'studentId': studentId, 'courseCode': course.code}) }}"><button type="button" class="btn btn-primary">Yes</button></a>
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="course{{ course.code }}GradeAlert" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="false">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Grade:
                                                {% if grades[loop.index-1] != null %}
                                                    {{ grades[loop.index-1] }}
                                                {% else %}
                                                    -
                                                {% endif %}</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            {% set gradeForm = gradeFormObject.createView %}
                                            {{ form_start(gradeForm, {'action': path('addStudentCourseGrade', {'studentId': studentId, 'courseCode': course.code}), 'method': 'POST'}) }}
                                            {{ form_widget(gradeForm) }}
                                        </div>
                                        <div class="modal-footer">
                                            {{ form_row(gradeForm.save) }}
                                            {{ form_end(gradeForm) }}
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="course{{ course.code }}NoteAlert" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="false">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Text Note</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            {{ notes[loop.index-1] }}
                                            {% set noteForm = noteFormObject.createView %}
                                            {{ form_start(noteForm, {'action': path('addStudentCourseNote', {'studentId': studentId, 'courseCode': course.code}), 'method': 'POST'}) }}
                                            {{ form_widget(noteForm) }}
                                        </div>
                                        <div class="modal-footer">
                                            {{ form_row(noteForm.save) }}
                                            {{ form_end(noteForm) }}
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {% set ectsSum = ectsSum + course.eCTS %}
                        {% endfor %}
                        <tr class="coursesStudentsToggleable">
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>Sum: {{ ectsSum }}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    </div>
    </div>

{% endblock %}

{% block javascripts %}

    <script>


        var coursesContainer = document.getElementById("searchedCourses");
        var searchInput = document.getElementById("searchInput");

        searchInput.addEventListener("input", function(){

            var ourRequest = new XMLHttpRequest();
            var url = "{{ url('searchCourse', {'searchPhrase': 'searchPhrase'}) }}";
            var value = searchInput.value;
            url = url.replace("searchPhrase", value);
            ourRequest.open('GET', url, true);
            ourRequest.onload = function(){

                var courses = JSON.parse(ourRequest.responseText);
                renderSearchedCourses(courses);
            };

            ourRequest.send();
        });

        function renderSearchedCourses(courses){

            var htmlcourses = "";

            for(var i = 0; i < courses.length; i++){

                var url = "{{ path('addStudentCourse', {'studentId': studentId, 'courseCode': 'courseCode'}) }}";
                var code = courses[i].code;
                url = url.replace("courseCode", code);

                htmlcourses += "<tr>" + "<td>" + (i+1) + "</td>" + "<td>" + courses[i].code + "</td>" + "<td>" + courses[i].name + "</td>" +
                    "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courses[i].form + "</td>" +
                    "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courses[i].ects + "</td>" +
                    "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courses[i].level + "</td>" +
                    "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courses[i].type + "</td>";

                if(courses[i].syllabus !== null) {

                    htmlcourses += "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courses[i].syllabus + "</td>";
                } else {

                    htmlcourses += "<td class=" + "\"coursesSearchedToggleable\"" + ">-</td>";
                }

                htmlcourses += "<td><a href=" + url + "><button type=" + "\"button\" " + "class=" + "\"btn btn-primary\"" + ">Add course for student</button></a></td>" + "</tr>";
            }

            coursesContainer.innerHTML = htmlcourses;

            if($("#coursesListToggle").prop("checked") === true) {

                $(".coursesSearchedToggleable").hide();
                $(".coursesStudentsToggleable").hide();
            }
        }

        var courseStudentStateHistoryButtons = document.getElementsByClassName("courseStudentStateHistoryButton");

        for (var i = 0; i < courseStudentStateHistoryButtons.length; i++) {
            courseStudentStateHistoryButtons[i].addEventListener("click", function(){

                var courseStudentStateHistoryButtonId = this.id;

                var ourRequest = new XMLHttpRequest();
                var url = "{{ url('courseStudentStateHistory', {'courseId': 'courseId', 'studentId': 'studentId'}) }}";
                var courseId = parseInt(courseStudentStateHistoryButtonId);
                var studentId = courseStudentStateHistoryButtonId.split(/[^0-9]+/g)[1];
                url = url.replace("courseId", courseId);
                url = url.replace("studentId", studentId);

                var courseStudentStateHistory = document.getElementById("courseStudent" + courseId + studentId + "StateHistory");
                ourRequest.open('GET', url, true);
                ourRequest.onload = function(){

                    console.log(ourRequest.responseText);
                    var courseStudentStates = JSON.parse(ourRequest.responseText);
                    renderCourseStudentStateHistory(courseStudentStates, courseStudentStateHistory);
                };

                ourRequest.send();
            });
        }

        function renderCourseStudentStateHistory(courseStudentStates, courseStudentStateHistory){

            console.log(courseStudentStates);

            var htmlCourseStudentStateHistory = "<div class=\"row bg-info\">\n" +
                "                                                <div class=\"col-md-4\">\n" +
                "                                                    <p>State</p>\n" +
                "                                                </div>\n" +
                "                                                <div class=\"col-md-4\">\n" +
                "                                                    <p>Date</p>\n" +
                "                                                </div>\n" +
                "                                                <div class=\"col-md-4\">\n" +
                "                                                    <p>Who changed state</p>\n" +
                "                                                </div>\n" +
                "                                            </div>";

            courseStudentStateHistory.innerHTML = htmlCourseStudentStateHistory;
            for(var i = 0; i < courseStudentStates.length; i++){

                var htmlCurrentCourseStudentStateName = "<div class=\"row bg-success\">\n" +
                    "                                                <div class=\"col-md-4\">\n" +
                    "                                                    <p>";

                htmlCurrentCourseStudentStateName += courseStudentStates[i].description;
                htmlCurrentCourseStudentStateName += "</p>\n" +
                    "                                                </div>";

                var htmlCurrentCourseStudentStateDate = "<div class=\"col-md-4\">\n" +
                    "                                                    <p>";

                htmlCurrentCourseStudentStateDate += courseStudentStates[i].date.date.split(".")[0];
                htmlCurrentCourseStudentStateDate += "</p>\n" +
                    "                                                </div>";

                var htmlCurrentCourseStudentStatePerson = "<div class=\"col-md-4\">\n" +
                    "                                                    <p>";

                htmlCurrentCourseStudentStatePerson += courseStudentStates[i].name + " " + courseStudentStates[i].surname;
                htmlCurrentCourseStudentStatePerson += "</p>\n" +
                    "                                                </div>" +
                    "                                            </div>";

                // htmlCourseStudentStateHistory += "<tr>" + "<td>" + (i+1) + "</td>" + "<td>" + courseStudentStates[i].code + "</td>" + "<td>" + courseStudentStates[i].name + "</td>" +
                //     "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courseStudentStates[i].form + "</td>" +
                //     "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courseStudentStates[i].ects + "</td>" +
                //     "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courseStudentStates[i].level + "</td>" +
                //     "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courseStudentStates[i].type + "</td>";
                //
                // if(courseStudentStates[i].syllabus !== null) {
                //
                //     htmlCourseStudentStateHistory += "<td class=" + "\"coursesSearchedToggleable\"" + ">" + courseStudentStates[i].syllabus + "</td>";
                // } else {
                //
                //     htmlCourseStudentStateHistory += "<td class=" + "\"coursesSearchedToggleable\"" + ">-</td>";
                // }
                //
                // htmlCourseStudentStateHistory += "<td><a href=" + url + "><button type=" + "\"button\" " + "class=" + "\"btn btn-primary\"" + ">Add course for student</button></a></td>" + "</tr>";
                courseStudentStateHistory.innerHTML += htmlCurrentCourseStudentStateName +
                    htmlCurrentCourseStudentStateDate + htmlCurrentCourseStudentStatePerson;
            }
        }

    </script>

{% endblock %}