{% extends "Basic/list.html.twig" %}

{% block header %}
    <h1 class = "page-header">Students</h1>
{% endblock %}

{% block addOrEditForm %}
    {% form_theme form _self %}

    <div class = "table-wrap">

        <h2 class="header" style="margin-top: 10px">{{ formTitle }}</h2>
        {{ form(form, {'attr': {'novalidate': 'novalidate'}}) }}
        {{ form_start(form) }}
        {{ form_widget(form) }}
        {{ form_end(form) }}

    </div>

    {% block form_errors %}
        {% spaceless %}
            {% if errors is defined and errors|length > 0 %}
                <ul class="error-list">
                    {% for error in errors %}
                        <li class="error-message">{{ error.message }}</li>
                    {% endfor %}
                </ul>
            {% endif %}
        {% endspaceless %}
    {% endblock form_errors %}
{% endblock %}

{% block listName %}
    <h2 class="header">Student List</h2>
{% endblock %}

{% block tableHeader %}

    <tr>
        <th class="hover-col">No. <span class="glyphicon glyphicon-sort-by-order" aria-hidden="true"></span></th>
        <th class="hover-col">Name <span class="glyphicon glyphicon-sort-by-alphabet" aria-hidden="true"></span></th>
        <th class="hover-col">Surname <span class="glyphicon glyphicon-sort-by-alphabet" aria-hidden="true"></span></th>
        <th class="hover-col">Index Number <span class="glyphicon glyphicon-sort-by-order" aria-hidden="true"></span></th>
    </tr>

{% endblock %}

{% block tableBody %}

    {% for student in students %}
        <tr>
            <td>{{ loop.index }}</td>
            <td>{{ student.name }}</td>
            <td>{{ student.surname }}</td>
            <td>{{ indexes[loop.index-1] }}</td>

        {% if app.session.get('role') == 'Internal Coordinator' %}
            <td><a href="{{ path('editStudent', {'id': student.id}) }}"><button type="button" class="btn btn-warning">Edit</button></a></td>
            <td><button type="button" class="btn btn-danger" data-toggle="modal" data-target="#student{{ student.id }}DeleteAlert">Delete</button></td>

            <div class="modal fade" id="student{{ student.id }}DeleteAlert" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Student deletion</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete this student?
                        </div>
                        <div class="modal-footer">
                            <a href="{{ path('deleteStudent', {'id': student.id}) }}"><button type="button" class="btn btn-primary">Yes</button></a>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

            <td><a href="{{ path('studentCourseList', {'studentId': studentArr[loop.index-1].id}) }}"><button type="button" class="btn btn-info">Students Courses</button></a></td>
            <td><a href="{{ path('assignStudentIndex', {'studentId': studentArr[loop.index-1].id}) }}"><button type="button" class="btn btn-info">Assign Student Index</button></a></td>
        {% endif %}

        {% if app.session.get('role') == 'Deans Office' %}
            <td><a href="{{ path('studentCourseList', {'studentId': studentArr[loop.index-1].id}) }}"><button type="button" class="btn btn-info">Students Courses</button></a></td>
        {% endif %}

        {% if app.session.get('role') == 'External Coordinator'%}
            <td><a href="{{ path('studentEnrollmentsState', {'studentId': studentArr[loop.index-1].id}) }}"><button type="button" class="btn btn-info">Students Enrolled Courses Acceptance</button></a></td>
        {% endif %}

        {% if app.session.get('role') == 'DWM' %}
            <td><a href="{{ path('assignStudentIndex', {'studentId': studentArr[loop.index-1].id}) }}"><button type="button" class="btn btn-info">Assign Student Index</button></a></td>
            <td><a href="{{ path('studentEnrollmentsState', {'studentId': studentArr[loop.index-1].id}) }}"><button type="button" class="btn btn-info">Students Enrolled Courses Acceptance</button></a></td>
        </tr>
        {% endif %}
    {% endfor %}

{% endblock %}

{% block javascripts %}

    <script>
        $("th").on("click", function(){

            var sortingIndex = $(this).parent().children().index($(this));
            var numberOfHeaders = $(this).parent().children().length;
            var numberOfColumns = $("table > tbody > tr:first > td").length;
            var rowList = $(this).closest('table').find('tbody').find('tr').toArray().map(function(x){

                var rowValues = [];
                for(var i = 0; i < numberOfHeaders; i++){

                    rowValues.push(x.cells[i].innerText);
                }
                console.log("row length: " + numberOfColumns);

                for (var i = numberOfHeaders; i < numberOfColumns; i++) {
                    var href = x.cells[i].innerHTML.split('"')[1];
                    var hrefId = rowValues.push(href.replace( /^\D+/g, ''));
                }

                // var href = x.cells[numberOfHeaders].innerHTML.split('"')[1];
                // var hrefId = rowValues.push(href.replace( /^\D+/g, ''));
                //
                // href = x.cells[numberOfHeaders + 2].innerHTML.split('"')[1];
                // console.log(href.replace( /^\D+/g, ''));
                // hrefId = rowValues.push(href.replace( /^\D+/g, ''));

                return rowValues;
            });

            rowList.sort(function(a, b) {
                if (a[sortingIndex] < b[sortingIndex]) {

                    return -1;
                }
                if (a[sortingIndex] > b[sortingIndex]) {

                    return 1;
                }

                return 0;
            });

            var numberOfRows = $('tbody tr').length;
            var numberOfColumns = rowList[0].length+1;

            $("tbody tr").each(function(rowIndex){

                var $row = $(this);
                $row.children().each(function(columnIndex)
                {
                    if(columnIndex < numberOfHeaders){
                        $(this).text(rowList[rowIndex][columnIndex]);
                    } else{
                        var html = $(this).html().split('"');
                        console.log($(this).html());
                        if ($(this).html().indexOf("data-target") !== -1) {
                            var href = html[7];
                            var hrefId = rowList[rowIndex][numberOfHeaders];
                            href = href.replace(/\d+/g, hrefId);
                            html[7] = href;
                            html = html.join('"');
                            $(this).html(html);
                        } else {
                            var href = html[1];
                            var hrefId = rowList[rowIndex][columnIndex];
                            href = href.slice(0, href.lastIndexOf('/')+1) + hrefId;
                            html[1] = href;
                            html = html.join('"');
                            $(this).html(html);
                        }
                    }
                });
            })

        });

        $("#student_university_university").change(function(){

            var data = {
                university_id: $(this).val()
            };

            var universityId = $(this).val();
            var url = "{{ url('externalCoordinatorsByUniversity', {'id': 'universityId'}) }}";
            var id = universityId;
            url = url.replace("universityId", id);

            $.ajax(
                {
                    type: 'get',
                    url: url,
                    data: data,
                    success: function(externalCoordinators) {

                        var externalCoordinatorsOptions = $('#student_university_externalCoordinator');

                        externalCoordinatorsOptions.html('');
                        if(externalCoordinators.length > 0){

                            for (var i=0; i < externalCoordinators.length; i++) {
                                externalCoordinatorsOptions.append('<option value="' + externalCoordinators[i].externalCoordinatorId + '">' + externalCoordinators[i].name + ' ' + externalCoordinators[i].surname + '</option>');
                            }
                        }
                    }
                });
        });
    </script>
{% endblock %}